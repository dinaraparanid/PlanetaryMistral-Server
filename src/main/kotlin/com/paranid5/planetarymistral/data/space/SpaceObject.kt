package com.paranid5.planetarymistral.data.space

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import lombok.NoArgsConstructor

@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
data class SpaceObject(
    @JsonProperty("above-horizon") val aboveHorizon: Boolean,
    val age: String,
    val airmass: Int,
    val albedo: Double,
    val altitude: Double,
    @JsonProperty("altitude-geometric") val altitudeGeometric: Double,
    val ambientInt: Double,
    val ambientLum: Double,
    val appSidTm: String,
    val azimuth: Double,
    @JsonProperty("azimuth-geometric") val azimuthGeometric: Double,
    @JsonProperty("central_b") val centralB: Double,
    @JsonProperty("central_l") val centralL: Double,
    val colongitude: Double,
    val dec: Double,
    val decJ2000: Double,
    val distance: Double,
    @JsonProperty("ecl-elongation") val eclElongation: Double,
    @JsonProperty("ecl-elongation-deg") val eclElongationDeg: String,
    @JsonProperty("ecl-elongation-dms") val eclElongationDms: String,
    @JsonProperty("ecliptic-obliquity") val eclipticObliquity: Double,
    val elat: Double,
    val elatJ2000: Double,
    val elong: Double,
    val elongJ2000: Double,
    val elongation: Double,
    @JsonProperty("elongation-deg") val elongationDeg: String,
    @JsonProperty("elongation-dms") val elongationDms: String,
    val found: Boolean,
    val glat: Double,
    val glong: Double,
    @JsonProperty("heliocentric-velocity") val heliocentricVelocity: String,
    @JsonProperty("heliocentric-velocity-kms") val heliocentricVelocityKms: String,
    @JsonProperty("hourAngle-dd") val hourAngleDd: Double,
    @JsonProperty("hourAngle-hms") val hourAngleHms: String,
    val iauConstellation: String,
    val illumination: Double,
    @JsonProperty("is-waning") val isWaning: Boolean,
    @JsonProperty("libration_b") val librationB: Double,
    @JsonProperty("libration_l") val librationL: Double,
    @JsonProperty("localized-name") val localizedName: String,
    val meanSidTm: String,
    val name: String,
    @JsonProperty("object-type") val objectType: String,
    @JsonProperty("pa_axis") val paAxis: Double,
    val parallacticAngle: Double,
    @JsonProperty("penumbral-eclipse-magnitude") val penumbralEclipseMagnitude: Int,
    val phase: Double,
    @JsonProperty("phase-angle") val phaseAngle: Double,
    @JsonProperty("phase-angle-deg") val phaseAngleDeg: String,
    @JsonProperty("phase-angle-dms") val phaseAngleDms: String,
    @JsonProperty("phase-name") val phaseName: String,
    val ra: Double,
    val raJ2000: Double,
    val rise: String,
    @JsonProperty("rise-dhr") val riseDhr: Double,
    val scale: Int,
    val set: String,
    @JsonProperty("set-dhr") val setDhr: Double,
    val sglat: Double,
    val sglong: Double,
    val size: Double,
    @JsonProperty("size-dd") val sizeDd: Double,
    @JsonProperty("size-deg") val sizeDeg: String,
    @JsonProperty("size-dms") val sizeDms: String,
    @JsonProperty("subsolar_b") val subsolarB: Double,
    @JsonProperty("subsolar_l") val subsolarL: Double,
    val transit: String,
    @JsonProperty("transit-dhr") val transitDhr: Double,
    val type: String,
    @JsonProperty("umbral-eclipse-magnitude") val umbralEclipseMagnitude: Int,
    val velocity: String,
    @JsonProperty("velocity-kms") val velocityKms: String,
    val vmag: Double,
    val vmage: Double
)

